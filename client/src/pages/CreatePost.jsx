import React, { useState } from "react";
import { preview } from "../assets";
import { FormField, Loader } from "../components";
import { useNavigate } from "react-router-dom";

const CreatePost = () => {
  const navigate = useNavigate();
  const [form, setForm] = useState({
    name: "",
    prompt: "",
    photo: "",
  });
  const [generatingImage, setGeneratingImage] = useState(false);
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (form.name && form.prompt) {
      setLoading(true);
  
      try {
        // Call an API to save post
        // Assuming post saved successfully, redirect:
        navigate("/some-path");
      } catch (error) {
        console.error("Error creating post:", error);
      } finally {
        setLoading(false);
      }
    } else {
      alert("Please fill all fields");
    }
  };

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handlePrompts = (prompt) => {
    setForm({ ...form, prompt });
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div className="text-center">
        <h1 className="font-extrabold text-[35px]">Community Showcase</h1>
        <p className="mt-3 text-gray-400 text-[18px] max-w-[700px] mx-auto">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>
      <form className="mt-16 max-w-3xl" onSubmit={handleSubmit}>
        <div className="flex flex-col gap-5">
          <FormField
            labelName="Your Name"
            type="text"
            name="name"
            placeholder="Ram Bahadur"
            value={form.name}
            handleChange={handleChange}
          />
          <FormField
            labelName="Prompt"
            type="text"
            name="prompt"
            placeholder="A Gen-z guy"
            value={form.prompt}
            handleChange={handleChange}
            prompts
            handlePrompts={handlePrompts}
          />
          <div className="relative bg-gray-50 text-gray-900 rounded-lg focus:ring-blue-500 h-64 flex justify-center items-center">
            {form.photo ? (
              <img
                src={form.photo}
                alt="preview"
                className="w-9/12 h-9/12 object-contain opacity-40"
              />
            ) : (
              <img
                src={preview}
                alt="preview"
                className="w-9/12 h-9/12 object-contain opacity-40"
              />
            )}
          </div>
          <button
            type="submit"
            className="mt-3 text-white bg-blue-500 font-bold py-2 px-4 rounded-lg"
          >
            {loading ? "Posting..." : "Create Post"}
          </button>
        </div>
      </form>
    </section>
  );
};

export default CreatePost;
